// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: proto_http.proto

package main

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Control data
type Request_Method int32

const (
	Request_GET     Request_Method = 0
	Request_HEAD    Request_Method = 1
	Request_POST    Request_Method = 2
	Request_PUT     Request_Method = 3
	Request_DELETE  Request_Method = 4
	Request_PATCH   Request_Method = 5
	Request_OPTIONS Request_Method = 6
	Request_TRACE   Request_Method = 7 // Note: CONNECT is not supported
)

// Enum value maps for Request_Method.
var (
	Request_Method_name = map[int32]string{
		0: "GET",
		1: "HEAD",
		2: "POST",
		3: "PUT",
		4: "DELETE",
		5: "PATCH",
		6: "OPTIONS",
		7: "TRACE",
	}
	Request_Method_value = map[string]int32{
		"GET":     0,
		"HEAD":    1,
		"POST":    2,
		"PUT":     3,
		"DELETE":  4,
		"PATCH":   5,
		"OPTIONS": 6,
		"TRACE":   7,
	}
)

func (x Request_Method) Enum() *Request_Method {
	p := new(Request_Method)
	*p = x
	return p
}

func (x Request_Method) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Request_Method) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_http_proto_enumTypes[0].Descriptor()
}

func (Request_Method) Type() protoreflect.EnumType {
	return &file_proto_http_proto_enumTypes[0]
}

func (x Request_Method) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Request_Method.Descriptor instead.
func (Request_Method) EnumDescriptor() ([]byte, []int) {
	return file_proto_http_proto_rawDescGZIP(), []int{1, 0}
}

type Request_Scheme int32

const (
	Request_HTTP  Request_Scheme = 0
	Request_HTTPS Request_Scheme = 1
)

// Enum value maps for Request_Scheme.
var (
	Request_Scheme_name = map[int32]string{
		0: "HTTP",
		1: "HTTPS",
	}
	Request_Scheme_value = map[string]int32{
		"HTTP":  0,
		"HTTPS": 1,
	}
)

func (x Request_Scheme) Enum() *Request_Scheme {
	p := new(Request_Scheme)
	*p = x
	return p
}

func (x Request_Scheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Request_Scheme) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_http_proto_enumTypes[1].Descriptor()
}

func (Request_Scheme) Type() protoreflect.EnumType {
	return &file_proto_http_proto_enumTypes[1]
}

func (x Request_Scheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Request_Scheme.Descriptor instead.
func (Request_Scheme) EnumDescriptor() ([]byte, []int) {
	return file_proto_http_proto_rawDescGZIP(), []int{1, 1}
}

type HeaderNameValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *HeaderNameValue) Reset() {
	*x = HeaderNameValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_http_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeaderNameValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderNameValue) ProtoMessage() {}

func (x *HeaderNameValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_http_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderNameValue.ProtoReflect.Descriptor instead.
func (*HeaderNameValue) Descriptor() ([]byte, []int) {
	return file_proto_http_proto_rawDescGZIP(), []int{0}
}

func (x *HeaderNameValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HeaderNameValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// A simplified Known Length Request, inspired by Binary HTTP:
//
//	https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-binary-message#section-3.1
type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method    Request_Method `protobuf:"varint,1,opt,name=method,proto3,enum=Request_Method" json:"method,omitempty"`
	Scheme    Request_Scheme `protobuf:"varint,2,opt,name=scheme,proto3,enum=Request_Scheme" json:"scheme,omitempty"`
	Authority string         `protobuf:"bytes,3,opt,name=authority,proto3" json:"authority,omitempty"`
	Path      string         `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	// Header fields. Can be same header name but multiple values like for cookies.
	Headers []*HeaderNameValue `protobuf:"bytes,5,rep,name=headers,proto3" json:"headers,omitempty"`
	// Content
	Body []byte `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`
	// Padding
	Padding []byte `protobuf:"bytes,7,opt,name=padding,proto3" json:"padding,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_http_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_http_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_proto_http_proto_rawDescGZIP(), []int{1}
}

func (x *Request) GetMethod() Request_Method {
	if x != nil {
		return x.Method
	}
	return Request_GET
}

func (x *Request) GetScheme() Request_Scheme {
	if x != nil {
		return x.Scheme
	}
	return Request_HTTP
}

func (x *Request) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *Request) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Request) GetHeaders() []*HeaderNameValue {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *Request) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *Request) GetPadding() []byte {
	if x != nil {
		return x.Padding
	}
	return nil
}

// A simplified Known Length Response, inspired by Binary HTTP:
//
//	https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-binary-message#section-3.1
type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Control data
	StatusCode int32 `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	// Header fields. Can be same header name but multiple values like for cookies.
	Headers []*HeaderNameValue `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty"`
	// Content
	Body []byte `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	// Padding
	Padding []byte `protobuf:"bytes,4,opt,name=padding,proto3" json:"padding,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_http_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_http_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_http_proto_rawDescGZIP(), []int{2}
}

func (x *Response) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *Response) GetHeaders() []*HeaderNameValue {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *Response) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *Response) GetPadding() []byte {
	if x != nil {
		return x.Padding
	}
	return nil
}

var File_proto_http_proto protoreflect.FileDescriptor

var file_proto_http_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x0f, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xe5, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x2a, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x5d, 0x0a, 0x06, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x48, 0x45, 0x41, 0x44, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x4f, 0x53, 0x54, 0x10, 0x02,
	0x12, 0x07, 0x0a, 0x03, 0x50, 0x55, 0x54, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x41, 0x54, 0x43, 0x48, 0x10, 0x05,
	0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x06, 0x12, 0x09, 0x0a,
	0x05, 0x54, 0x52, 0x41, 0x43, 0x45, 0x10, 0x07, 0x22, 0x1d, 0x0a, 0x06, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x54, 0x54, 0x50, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x48, 0x54, 0x54, 0x50, 0x53, 0x10, 0x01, 0x22, 0x84, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x08,
	0x5a, 0x06, 0x2e, 0x3b, 0x6d, 0x61, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_http_proto_rawDescOnce sync.Once
	file_proto_http_proto_rawDescData = file_proto_http_proto_rawDesc
)

func file_proto_http_proto_rawDescGZIP() []byte {
	file_proto_http_proto_rawDescOnce.Do(func() {
		file_proto_http_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_http_proto_rawDescData)
	})
	return file_proto_http_proto_rawDescData
}

var file_proto_http_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_http_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_http_proto_goTypes = []interface{}{
	(Request_Method)(0),     // 0: Request.Method
	(Request_Scheme)(0),     // 1: Request.Scheme
	(*HeaderNameValue)(nil), // 2: HeaderNameValue
	(*Request)(nil),         // 3: Request
	(*Response)(nil),        // 4: Response
}
var file_proto_http_proto_depIdxs = []int32{
	0, // 0: Request.method:type_name -> Request.Method
	1, // 1: Request.scheme:type_name -> Request.Scheme
	2, // 2: Request.headers:type_name -> HeaderNameValue
	2, // 3: Response.headers:type_name -> HeaderNameValue
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_http_proto_init() }
func file_proto_http_proto_init() {
	if File_proto_http_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_http_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeaderNameValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_http_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_http_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_http_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_http_proto_goTypes,
		DependencyIndexes: file_proto_http_proto_depIdxs,
		EnumInfos:         file_proto_http_proto_enumTypes,
		MessageInfos:      file_proto_http_proto_msgTypes,
	}.Build()
	File_proto_http_proto = out.File
	file_proto_http_proto_rawDesc = nil
	file_proto_http_proto_goTypes = nil
	file_proto_http_proto_depIdxs = nil
}
